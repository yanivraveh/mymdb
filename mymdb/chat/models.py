from django.db import models
from django.contrib.auth import get_user_model
import uuid

User = get_user_model()


class Room(models.Model):
    name = models.CharField(max_length=80, unique=True)
    slug = models.SlugField(max_length=100, unique=True)
    created_by = models.ForeignKey(User, null=True, blank=True, on_delete=models.SET_NULL, related_name="created_rooms")
    created_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["created_at"]),
        ]

    def __str__(self):
        return self.name


class Message(models.Model):
    # Idempotency key generated by the WS producer; ensures no duplicate inserts
    event_id = models.UUIDField(default=uuid.uuid4, unique=True, editable=False)

    room = models.ForeignKey(Room, on_delete=models.CASCADE, related_name="messages")
    user = models.ForeignKey(User, null=True, blank=True, on_delete=models.SET_NULL, related_name="chat_messages")
    content = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["created_at"]),
            models.Index(fields=["room", "created_at"]),
        ]

    def __str__(self):
        return f"{self.user or 'Anonymous'}: {self.content[:30]}"